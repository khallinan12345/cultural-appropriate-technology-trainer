import express from 'express';import cors from 'cors';import dotenv from 'dotenv';dotenv.config();const app = express();const PORT = process.env.PORT || 3001;// Enhanced CORS configurationapp.use(cors({  origin: ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:3002'],  credentials: true}));app.use(express.json());// Test endpointapp.get('/api/test', (req, res) => {  console.log('Test endpoint hit');  res.json({ message: 'Server is running!', timestamp: new Date().toISOString() });});// Generate endpoint with detailed loggingapp.post('/api/generate', async (req, res) => {  console.log('=== /api/generate endpoint hit ===');  console.log('Request body:', JSON.stringify(req.body, null, 2));  console.log('OpenAI API Key exists:', !!process.env.OPENAI_API_KEY);    try {    const { prompt } = req.body;        if (!process.env.OPENAI_API_KEY) {      throw new Error('OpenAI API key not configured');    }        console.log('Calling OpenAI API...');        const response = await fetch('https://api.openai.com/v1/chat/completions', {      method: 'POST',      headers: {        'Content-Type': 'application/json',        'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`      },      body: JSON.stringify({        model: 'gpt-3.5-turbo',        messages: [          {            role: 'user',            content: prompt          }        ],        temperature: 0.7,        max_tokens: 1000      })    });        if (!response.ok) {      const errorData = await response.json();      console.error('OpenAI API error:', errorData);      throw new Error(`OpenAI API error: ${response.status} - ${JSON.stringify(errorData)}`);    }        const data = await response.json();    console.log('OpenAI response received');        res.json({      response: data.choices[0].message.content    });  } catch (error) {    console.error('Error in /api/generate:', error);    res.status(500).json({ error: error.message });  }});app.listen(PORT, () => {  console.log(`✅ Server is running on http://localhost:${PORT}`);  console.log(`📍 Test endpoint: http://localhost:${PORT}/api/test`);});